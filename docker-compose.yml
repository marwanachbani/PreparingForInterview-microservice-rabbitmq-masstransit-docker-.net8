

  


services:
  mariadb:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: defaultdb
      MYSQL_USER: my_user
      MYSQL_PASSWORD: my_password
    ports:
      - "3306:3306"
    networks:
      - my_network
    volumes:
      - ./db/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u my_user --password=my_password || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10


  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - my_network

  orderservice:
    build:
      context: .
      dockerfile: ./OrderService/Dockerfile
    environment:
      
    ports:
      - "5002:8080"
    networks:
      - my_network
    depends_on:
      mariadb:
        condition: service_healthy
      rabbitmq:
        condition: service_started

  productservice:
    build:
      context: .
      dockerfile: ./ProductService/Dockerfile
    environment:
      
    ports:
      - "5001:8080"
    networks:
      - my_network
    depends_on:
      mariadb:
        condition: service_healthy
      rabbitmq:
        condition: service_started

  userservice:
    build:
      context: .
      dockerfile: ./UserService/Dockerfile
    environment:
      - JWT_KEY=your-secure-key
      - JWT_ISSUER=UserService
      - JWT_AUDIENCE=UserServiceAudience
      
    ports:
      - "5000:8080"
    networks:
      - my_network
    depends_on:
      mariadb:
        condition: service_healthy
      rabbitmq:
        condition: service_started

  eventstoreservice:
    build:
      context: .
      dockerfile: ./EventStoreService/Dockerfile
    environment:
      
    ports:
      - "5003:8080"
    networks:
      - my_network
    depends_on:
      mariadb:
        condition: service_healthy
      rabbitmq:
        condition: service_started

networks:
  my_network:
    driver: bridge
